{"ast":null,"code":"var _jsxFileName = \"/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/routes/WebsocketClient.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Cookies from \"universal-cookie\";\nimport { Box, Container, CssBaseline, Grid, Stack, TextField } from \"@mui/material\";\nimport MessageCard from \"../components/MessageCard\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendRoundedIcon from \"@mui/icons-material/SendRounded\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebsocketClient = () => {\n  _s();\n  const [ws, setWs] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [content, setContent] = useState('');\n  const cookies = new Cookies();\n  const accessToken = cookies.get('access-token');\n  const navigate = useNavigate();\n  const [auth, setAuth] = useState(false);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // useEffect(() => {\n  //     // Fetch historical messages\n  //     fetch('http://localhost:8000/history', {\n  //         method: \"GET\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\",\n  //             'Authorization': `Bearer ${accessToken}`\n  //         },\n  //     })\n  //         .then(response => {\n  //             if (response.status !== 200) {\n  //                 console.log('Network response was not ok');\n  //                 setAuth(false);\n  //                 console.log(response)\n  //                 throw new Error(\"no auth\")\n  //             }\n  //             return response.json();\n  //         })\n  //         .then((data: Message[]) => {\n  //\n  //             console.log(data)\n  //             setMessages(data);\n  //             setAuth(true);\n  //             const websocket = new WebSocket('ws://localhost:8000/message');\n  //\n  //             websocket.onopen = () => {\n  //                 console.log('WebSocket Connected');\n  //             };\n  //\n  //             websocket.onmessage = (event) => {\n  //                 const message: Message = JSON.parse(event.data);\n  //                 setMessages((prevMessages) => [...prevMessages, message]);\n  //             };\n  //\n  //             websocket.onclose = () => console.log('WebSocket Disconnected');\n  //\n  //             setWs(websocket);\n  //\n  //             return () => {\n  //                 websocket.close();\n  //             };\n  //         })\n  //         .catch(error => {\n  //             console.error(\"Failed to fetch historical messages:\", error);\n  //             if (!auth) {\n  //                 setTimeout(() => navigate(\"/login\"), 4000);\n  //             }\n  //             setAuth(false)\n  //         });\n  // }, [accessToken, navigate]);\n  //\n  // const sendMessage = () => {\n  //     if (ws) {\n  //         ws.send(JSON.stringify({username: cookies.get('user'), content: content}));\n  //         setContent('');\n  //     }\n  // };\n  //\n  // if (!auth) {\n  //     return <>\n  //         <Box sx={{\n  //             mt: 20,\n  //             display: \"flex\",\n  //             flexDirection: \"column\",\n  //             alignItems: \"center\",\n  //         }}>\n  //             <Typography variant=\"h5\">You have not login! Redirecting to login page...</Typography>\n  //         </Box>\n  //     </>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        m: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          maxHeight: 600,\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 4,\n          children: messages === null || messages === void 0 ? void 0 : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageCard, {\n            userName: msg.username,\n            time: formatDate(msg.created_at),\n            content: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        sx: {\n          flexGrow: 1\n        },\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"messageInput\",\n            placeholder: \"Write here...\",\n            multiline: true,\n            autoFocus: true,\n            value: content,\n            onChange: e => setContent(e.target.value),\n            size: \"medium\",\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            color: \"primary\",\n            \"aria-label\": \"send a messgae\"\n            // onClick={sendMessage}\n            ,\n            children: /*#__PURE__*/_jsxDEV(SendRoundedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(WebsocketClient, \"XfwiIYqEnWOQ6X7ZLxWd/L++oUA=\", false, function () {\n  return [useNavigate];\n});\n_c = WebsocketClient;\nexport default WebsocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebsocketClient\");","map":{"version":3,"names":["React","useState","Cookies","Box","Container","CssBaseline","Grid","Stack","TextField","MessageCard","IconButton","SendRoundedIcon","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","WebsocketClient","_s","ws","setWs","messages","setMessages","content","setContent","cookies","accessToken","get","navigate","auth","setAuth","formatDate","dateString","date","Date","toLocaleString","children","sx","m","fileName","_jsxFileName","lineNumber","columnNumber","style","maxHeight","overflow","spacing","map","msg","index","userName","username","time","created_at","flexGrow","container","id","placeholder","multiline","autoFocus","value","onChange","e","target","size","margin","item","xs","color","_c","$RefreshReg$"],"sources":["/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/routes/WebsocketClient.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Cookies from \"universal-cookie\";\nimport {Box, Container, CssBaseline, Grid, Stack, TextField, Typography} from \"@mui/material\";\nimport MessageCard from \"../components/MessageCard\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendRoundedIcon from \"@mui/icons-material/SendRounded\";\nimport {useNavigate} from \"react-router-dom\";\nimport {List} from \"@mui/icons-material\";\nimport internal from \"stream\";\n\ninterface Message {\n    username: string;\n    content: string;\n    created_at: string,\n    message_id: string,\n    upvote: string\n}\n\nconst WebsocketClient = () => {\n    const [ws, setWs] = useState<WebSocket | null>(null);\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [content, setContent] = useState('');\n    const cookies = new Cookies();\n    const accessToken = cookies.get('access-token');\n    const navigate = useNavigate();\n    const [auth, setAuth] = useState(false);\n\n    const formatDate = (dateString: string): string => {\n        const date = new Date(dateString);\n        return date.toLocaleString();\n    };\n\n    // useEffect(() => {\n    //     // Fetch historical messages\n    //     fetch('http://localhost:8000/history', {\n    //         method: \"GET\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\",\n    //             'Authorization': `Bearer ${accessToken}`\n    //         },\n    //     })\n    //         .then(response => {\n    //             if (response.status !== 200) {\n    //                 console.log('Network response was not ok');\n    //                 setAuth(false);\n    //                 console.log(response)\n    //                 throw new Error(\"no auth\")\n    //             }\n    //             return response.json();\n    //         })\n    //         .then((data: Message[]) => {\n    //\n    //             console.log(data)\n    //             setMessages(data);\n    //             setAuth(true);\n    //             const websocket = new WebSocket('ws://localhost:8000/message');\n    //\n    //             websocket.onopen = () => {\n    //                 console.log('WebSocket Connected');\n    //             };\n    //\n    //             websocket.onmessage = (event) => {\n    //                 const message: Message = JSON.parse(event.data);\n    //                 setMessages((prevMessages) => [...prevMessages, message]);\n    //             };\n    //\n    //             websocket.onclose = () => console.log('WebSocket Disconnected');\n    //\n    //             setWs(websocket);\n    //\n    //             return () => {\n    //                 websocket.close();\n    //             };\n    //         })\n    //         .catch(error => {\n    //             console.error(\"Failed to fetch historical messages:\", error);\n    //             if (!auth) {\n    //                 setTimeout(() => navigate(\"/login\"), 4000);\n    //             }\n    //             setAuth(false)\n    //         });\n    // }, [accessToken, navigate]);\n    //\n    // const sendMessage = () => {\n    //     if (ws) {\n    //         ws.send(JSON.stringify({username: cookies.get('user'), content: content}));\n    //         setContent('');\n    //     }\n    // };\n    //\n    // if (!auth) {\n    //     return <>\n    //         <Box sx={{\n    //             mt: 20,\n    //             display: \"flex\",\n    //             flexDirection: \"column\",\n    //             alignItems: \"center\",\n    //         }}>\n    //             <Typography variant=\"h5\">You have not login! Redirecting to login page...</Typography>\n    //         </Box>\n    //     </>\n    // }\n\n    return (\n        <>\n            <Container sx={{m: 'auto'}}\n            >\n                <CssBaseline/>\n                <Box style={{maxHeight: 600, overflow: 'auto'}}>\n                    <Stack spacing={4}>\n                        {messages?.map((msg, index) => (\n                            <MessageCard userName={msg.username} time={formatDate(msg.created_at)}\n                                         content={msg.content}/>\n                        ))}\n                    </Stack>\n                </Box>\n\n                    <Grid sx={{ flexGrow: 1 }} container spacing={2}>\n                        <Grid>\n                            <TextField\n                                id=\"messageInput\"\n                                placeholder=\"Write here...\"\n                                multiline\n                                autoFocus\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                size=\"medium\"\n                                margin=\"normal\"\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <IconButton\n                            size=\"large\" color=\"primary\" aria-label=\"send a messgae\"\n                            // onClick={sendMessage}\n                            >\n                            <SendRoundedIcon/>\n                        </IconButton>\n\n                        </Grid>\n\n                    </Grid>\n\n\n\n            </Container>\n\n        </>\n    )\n};\n\nexport default WebsocketClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}