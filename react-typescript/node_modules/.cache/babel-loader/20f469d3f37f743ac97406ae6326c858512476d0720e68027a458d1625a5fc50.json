{"ast":null,"code":"var _jsxFileName = \"/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/WebsocketClient.tsx\",\n  _s = $RefreshSig$();\n// src/components/WebsocketClient.tsx\nimport React, { useEffect, useState } from 'react';\nimport Cookies from \"universal-cookie\";\nimport { Box, Stack, TextField } from \"@mui/material\";\nimport MessageCard from \"./MessageCard\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendRoundedIcon from \"@mui/icons-material/SendRounded\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebsocketClient = () => {\n  _s();\n  const [ws, setWs] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [content, setContent] = useState('');\n  const cookies = new Cookies();\n  useEffect(() => {\n    // Fetch historical messages\n    fetch('http://localhost:8000/history').then(response => response.json()).then(data => {\n      setMessages(data); // Assuming the API returns an array of messages\n      const websocket = new WebSocket('ws://localhost:8000/message');\n      websocket.onopen = () => {\n        console.log('WebSocket Connected');\n      };\n      websocket.onmessage = event => {\n        const message = JSON.parse(event.data);\n        setMessages(prevMessages => [...prevMessages, message]);\n      };\n      websocket.onclose = () => console.log('WebSocket Disconnected');\n      setWs(websocket);\n      return () => {\n        websocket.close();\n      };\n    }).catch(error => console.error(\"Failed to fetch historical messages:\", error));\n  }, []);\n  const sendMessage = () => {\n    if (ws) {\n      ws.send(JSON.stringify({\n        username: cookies.get('user'),\n        content: content\n      }));\n      setContent('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      height: 1000,\n      width: 1000,\n      my: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 4,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageCard, {\n          userName: msg.username,\n          time: \"a\",\n          content: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(MessageCard, {\n          userName: \"a\",\n          time: \"a\",\n          content: \"a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"messageInput\",\n          placeholder: \"Write here...\",\n          multiline: true,\n          autoFocus: true,\n          value: content,\n          onChange: e => setContent(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"large\",\n          color: \"primary\",\n          \"aria-label\": \"send a messgae\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(SendRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(WebsocketClient, \"r3V8hS5UhRa4o99N/KDfBnNCugc=\");\n_c = WebsocketClient;\nexport default WebsocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebsocketClient\");","map":{"version":3,"names":["React","useEffect","useState","Cookies","Box","Stack","TextField","MessageCard","IconButton","SendRoundedIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","WebsocketClient","_s","ws","setWs","messages","setMessages","content","setContent","cookies","fetch","then","response","json","data","websocket","WebSocket","onopen","console","log","onmessage","event","message","JSON","parse","prevMessages","onclose","close","catch","error","sendMessage","send","stringify","username","get","children","height","width","my","display","alignItems","gap","spacing","map","msg","index","userName","time","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","multiline","autoFocus","value","onChange","e","target","fullWidth","size","color","onClick","_c","$RefreshReg$"],"sources":["/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/WebsocketClient.tsx"],"sourcesContent":["// src/components/WebsocketClient.tsx\nimport React, { useEffect, useState } from 'react';\nimport Cookies from \"universal-cookie\";\nimport {Box, Stack, TextField} from \"@mui/material\";\nimport MessageCard from \"./MessageCard\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendRoundedIcon from \"@mui/icons-material/SendRounded\";\n\ninterface Message {\n    username: string;\n    content: string;\n}\n\nconst WebsocketClient: React.FC = () => {\n    const [ws, setWs] = useState<WebSocket | null>(null);\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [content, setContent] = useState('');\n    const cookies = new Cookies();\n\n\n    useEffect(() => {\n        // Fetch historical messages\n        fetch('http://localhost:8000/history')\n            .then(response => response.json())\n            .then(data => {\n                setMessages(data);  // Assuming the API returns an array of messages\n                const websocket = new WebSocket('ws://localhost:8000/message');\n\n                websocket.onopen = () => {\n                    console.log('WebSocket Connected');\n                };\n\n                websocket.onmessage = (event) => {\n                    const message: Message = JSON.parse(event.data);\n                    setMessages((prevMessages) => [...prevMessages, message]);\n                };\n\n                websocket.onclose = () => console.log('WebSocket Disconnected');\n\n                setWs(websocket);\n\n                return () => {\n                    websocket.close();\n                };\n            })\n            .catch(error => console.error(\"Failed to fetch historical messages:\", error));\n    }, []);\n\n    const sendMessage = () => {\n        if (ws) {\n            ws.send(JSON.stringify({ username: cookies.get('user'), content: content }));\n            setContent('');\n        }\n    };\n\n    return (\n        <>\n            <Box height={1000}\n                 width={1000}\n                 my={4}\n                 display=\"flex\"\n                 alignItems=\"center\"\n                 gap={4}\n            >\n\n                <Stack spacing={2}>\n                        {messages.map((msg, index) => (\n                            <MessageCard userName={msg.username} time=\"a\" content={msg.content}/>\n                        ))}\n                    <MessageCard userName=\"a\" time=\"a\" content={\"a\"}/>\n                    <TextField\n                        id=\"messageInput\"\n                        placeholder=\"Write here...\"\n                        multiline\n                        autoFocus\n                        value={content}\n                        onChange={(e) => setContent(e.target.value)}\n                        fullWidth\n                    />\n                    <IconButton\n                        size=\"large\" color=\"primary\" aria-label=\"send a messgae\"\n                        onClick={sendMessage}\n                    >\n                        <SendRoundedIcon />\n                    </IconButton>\n                </Stack>\n            </Box>\n\n        </>\n    )\n};\n\nexport default WebsocketClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}