{"ast":null,"code":"var _jsxFileName = \"/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/routes/WebsocketClient.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Cookies from \"universal-cookie\";\nimport { Box, Container, CssBaseline, Grid, Stack, TextField, Typography } from \"@mui/material\";\nimport MessageCard from \"../components/MessageCard\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendRoundedIcon from \"@mui/icons-material/SendRounded\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebsocketClient = () => {\n  _s();\n  let [ws, setWs] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [content, setContent] = useState('');\n  const cookies = new Cookies();\n  const accessToken = cookies.get('access-token');\n  const navigate = useNavigate();\n  const [auth, setAuth] = useState(false);\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  useEffect(() => {\n    // Fetch historical messages\n    let websocket;\n    fetch('ws://localhost:8000/history', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    fetch('http://localhost:8000/history', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      if (response.status !== 200) {\n        console.log('Network response was not ok');\n        setAuth(false);\n        throw new Error(\"no auth\");\n      }\n      return response.json();\n    }).then(data => {\n      setMessages(data);\n      setAuth(true);\n      websocket = new WebSocket('ws://localhost:8000/message');\n      websocket.onopen = () => {\n        console.log('WebSocket Connected');\n      };\n      websocket.onclose = () => console.log('WebSocket Disconnected');\n      websocket.onmessage = event => {\n        const incomingMessage = JSON.parse(event.data);\n        if ('vote_count' in incomingMessage) {\n          console.log(incomingMessage);\n        } else {\n          setMessages(prevMessages => {\n            if (prevMessages.some(msg => msg.message_id === incomingMessage.message_id)) {\n              return prevMessages;\n            }\n            return [...prevMessages, incomingMessage];\n          });\n        }\n      };\n      setWs(websocket);\n    }).catch(error => {\n      console.error(\"Failed to fetch historical messages:\", error);\n      if (!auth) {\n        setTimeout(() => navigate(\"/login\"), 4000);\n      }\n      setAuth(false);\n    });\n    return () => {\n      if (ws) {\n        ws.close();\n        console.log('WebSocket has been closed');\n      }\n    };\n  }, [accessToken]);\n  const sendMessage = () => {\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      const username = cookies.get('user') || '';\n      const messageData = {\n        username: String(username),\n        content: content\n      };\n      ws.send(JSON.stringify(messageData));\n      console.log(\"Sent:\", JSON.stringify(messageData));\n      setContent('');\n    } else {\n      console.error(\"WebSocket is not open.\");\n    }\n  };\n  if (!auth) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 20,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"You have not login! Redirecting to login page...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        m: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          maxHeight: 600,\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 4,\n          children: messages === null || messages === void 0 ? void 0 : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageCard, {\n            userName: msg.username,\n            time: formatDate(msg.created_at),\n            content: msg.content,\n            message_id: msg.message_id,\n            websocket: ws\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        sx: {\n          m: 'auto'\n        },\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"messageInput\",\n            placeholder: \"Write here...\",\n            multiline: true,\n            autoFocus: true,\n            value: content,\n            onChange: e => setContent(e.target.value),\n            size: \"medium\",\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            color: \"primary\",\n            \"aria-label\": \"send a messgae\",\n            onClick: sendMessage,\n            children: /*#__PURE__*/_jsxDEV(SendRoundedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(WebsocketClient, \"5/mRPbjlunZgfyCAU9d8uIoGPA4=\", false, function () {\n  return [useNavigate];\n});\n_c = WebsocketClient;\nexport default WebsocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebsocketClient\");","map":{"version":3,"names":["React","useEffect","useState","Cookies","Box","Container","CssBaseline","Grid","Stack","TextField","Typography","MessageCard","IconButton","SendRoundedIcon","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","WebsocketClient","_s","ws","setWs","messages","setMessages","content","setContent","cookies","accessToken","get","navigate","auth","setAuth","formatDate","dateString","date","Date","toLocaleString","websocket","fetch","method","headers","then","response","status","console","log","Error","json","data","WebSocket","onopen","onclose","onmessage","event","incomingMessage","JSON","parse","prevMessages","some","msg","message_id","catch","error","setTimeout","close","sendMessage","readyState","OPEN","username","messageData","String","send","stringify","children","sx","mt","display","flexDirection","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","m","style","maxHeight","overflow","spacing","map","index","userName","time","created_at","container","id","placeholder","multiline","autoFocus","value","onChange","e","target","size","margin","item","xs","color","onClick","_c","$RefreshReg$"],"sources":["/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/routes/WebsocketClient.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Cookies from \"universal-cookie\";\nimport {Box, Container, CssBaseline, Grid, Stack, TextField, Typography} from \"@mui/material\";\nimport MessageCard from \"../components/MessageCard\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendRoundedIcon from \"@mui/icons-material/SendRounded\";\nimport {useNavigate} from \"react-router-dom\";\n\ninterface BaseMessage {\n    message_id: string;\n    username: string;\n}\n\ninterface VoteMessage extends BaseMessage {\n    vote_type: string;  // \"upvote\" or \"downvote\"\n    success: boolean;\n    vote_count: number;\n}\n\ninterface StoredMessage extends BaseMessage {\n    created_at: string;\n    content: string;\n}\n\ntype Message = VoteMessage | StoredMessage;\n\nconst WebsocketClient = () => {\n    let [ws, setWs] = useState<WebSocket | null>(null);\n    const [messages, setMessages] = useState<StoredMessage[]>([]);\n    const [content, setContent] = useState('');\n    const cookies = new Cookies();\n    const accessToken = cookies.get('access-token');\n    const navigate = useNavigate();\n    const [auth, setAuth] = useState(false);\n\n    const formatDate = (dateString: string): string => {\n        const date = new Date(dateString);\n        return date.toLocaleString();\n    };\n\n    useEffect(() => {\n        // Fetch historical messages\n        let websocket;\n\n        fetch('ws://localhost:8000/history', {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `Bearer ${accessToken}`\n            },\n        })\n\n        fetch('http://localhost:8000/history', {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `Bearer ${accessToken}`\n            },\n        })\n            .then(response => {\n                if (response.status !== 200) {\n                    console.log('Network response was not ok');\n                    setAuth(false);\n                    throw new Error(\"no auth\")\n                }\n                return response.json();\n            })\n            .then((data: StoredMessage[]) => {\n                setMessages(data);\n                setAuth(true);\n\n                websocket = new WebSocket('ws://localhost:8000/message');\n                websocket.onopen = () => {\n                    console.log('WebSocket Connected');\n                };\n                websocket.onclose = () => console.log('WebSocket Disconnected');\n\n                websocket.onmessage = (event) => {\n                    const incomingMessage: Message = JSON.parse(event.data);\n                    if ('vote_count' in incomingMessage) {\n                        console.log(incomingMessage)\n                    } else {\n                        setMessages((prevMessages) => {\n                            if (prevMessages.some(msg => msg.message_id === incomingMessage.message_id)) {\n                                return prevMessages;\n                            }\n                            return [...prevMessages, incomingMessage];\n                        });\n                    }\n                };\n                setWs(websocket);\n            })\n            .catch(error => {\n                console.error(\"Failed to fetch historical messages:\", error);\n                if (!auth) {\n                    setTimeout(() => navigate(\"/login\"), 4000);\n                }\n                setAuth(false)\n            });\n\n        return () => {\n            if (ws) {\n                ws.close();\n                console.log('WebSocket has been closed');\n            }\n        };\n    }, [accessToken]);\n\n    const sendMessage = () => {\n        if (ws && ws.readyState === WebSocket.OPEN) {\n            const username = cookies.get('user') || '';\n            const messageData = {\n                username: String(username),\n                content: content\n            };\n            ws.send(JSON.stringify(messageData));\n            console.log(\"Sent:\", JSON.stringify(messageData));\n            setContent('');\n        } else {\n            console.error(\"WebSocket is not open.\");\n        }\n    };\n\n    if (!auth) {\n        return <>\n            <Box sx={{\n                mt: 20,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n            }}>\n                <Typography variant=\"h5\">You have not login! Redirecting to login page...</Typography>\n            </Box>\n        </>\n    }\n\n    return (\n        <>\n            <Container sx={{m: 'auto'}}\n            >\n                <CssBaseline/>\n                <Box style={{maxHeight: 600, overflow: 'auto'}}>\n                    <Stack spacing={4}>\n                        {messages?.map((msg, index) => (\n                            <MessageCard userName={msg.username} time={formatDate(msg.created_at)}\n                                         content={msg.content} message_id={msg.message_id} websocket={ws} />\n                        ))}\n                    </Stack>\n                </Box>\n\n                    <Grid sx={{ m: 'auto' }} container spacing={2}>\n                        <Grid>\n                            <TextField\n                                id=\"messageInput\"\n                                placeholder=\"Write here...\"\n                                multiline\n                                autoFocus\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                size=\"medium\"\n                                margin=\"normal\"\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <IconButton\n                            size=\"large\" color=\"primary\" aria-label=\"send a messgae\"\n                            onClick={sendMessage}\n                            >\n                            <SendRoundedIcon/>\n                        </IconButton>\n                        </Grid>\n                    </Grid>\n            </Container>\n        </>\n    )\n};\n\nexport default WebsocketClient;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAAQC,GAAG,EAAEC,SAAS,EAAEC,WAAW,EAAEC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,UAAU,QAAO,eAAe;AAC7F,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAAQC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAoB7C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,IAAI,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGpB,QAAQ,CAAmB,IAAI,CAAC;EAClD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAkB,EAAE,CAAC;EAC7D,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMyB,OAAO,GAAG,IAAIxB,OAAO,CAAC,CAAC;EAC7B,MAAMyB,WAAW,GAAGD,OAAO,CAACE,GAAG,CAAC,cAAc,CAAC;EAC/C,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAM+B,UAAU,GAAIC,UAAkB,IAAa;IAC/C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC;EAChC,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACZ;IACA,IAAIqC,SAAS;IAEbC,KAAK,CAAC,6BAA6B,EAAE;MACjCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUb,WAAW;MAC1C;IACJ,CAAC,CAAC;IAEFW,KAAK,CAAC,+BAA+B,EAAE;MACnCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUb,WAAW;MAC1C;IACJ,CAAC,CAAC,CACGc,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1Cd,OAAO,CAAC,KAAK,CAAC;QACd,MAAM,IAAIe,KAAK,CAAC,SAAS,CAAC;MAC9B;MACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDN,IAAI,CAAEO,IAAqB,IAAK;MAC7BzB,WAAW,CAACyB,IAAI,CAAC;MACjBjB,OAAO,CAAC,IAAI,CAAC;MAEbM,SAAS,GAAG,IAAIY,SAAS,CAAC,6BAA6B,CAAC;MACxDZ,SAAS,CAACa,MAAM,GAAG,MAAM;QACrBN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACtC,CAAC;MACDR,SAAS,CAACc,OAAO,GAAG,MAAMP,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MAE/DR,SAAS,CAACe,SAAS,GAAIC,KAAK,IAAK;QAC7B,MAAMC,eAAwB,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACL,IAAI,CAAC;QACvD,IAAI,YAAY,IAAIM,eAAe,EAAE;UACjCV,OAAO,CAACC,GAAG,CAACS,eAAe,CAAC;QAChC,CAAC,MAAM;UACH/B,WAAW,CAAEkC,YAAY,IAAK;YAC1B,IAAIA,YAAY,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,KAAKN,eAAe,CAACM,UAAU,CAAC,EAAE;cACzE,OAAOH,YAAY;YACvB;YACA,OAAO,CAAC,GAAGA,YAAY,EAAEH,eAAe,CAAC;UAC7C,CAAC,CAAC;QACN;MACJ,CAAC;MACDjC,KAAK,CAACgB,SAAS,CAAC;IACpB,CAAC,CAAC,CACDwB,KAAK,CAACC,KAAK,IAAI;MACZlB,OAAO,CAACkB,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,IAAI,CAAChC,IAAI,EAAE;QACPiC,UAAU,CAAC,MAAMlC,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC;MAC9C;MACAE,OAAO,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC;IAEN,OAAO,MAAM;MACT,IAAIX,EAAE,EAAE;QACJA,EAAE,CAAC4C,KAAK,CAAC,CAAC;QACVpB,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC5C;IACJ,CAAC;EACL,CAAC,EAAE,CAAClB,WAAW,CAAC,CAAC;EAEjB,MAAMsC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAI7C,EAAE,IAAIA,EAAE,CAAC8C,UAAU,KAAKjB,SAAS,CAACkB,IAAI,EAAE;MACxC,MAAMC,QAAQ,GAAG1C,OAAO,CAACE,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;MAC1C,MAAMyC,WAAW,GAAG;QAChBD,QAAQ,EAAEE,MAAM,CAACF,QAAQ,CAAC;QAC1B5C,OAAO,EAAEA;MACb,CAAC;MACDJ,EAAE,CAACmD,IAAI,CAAChB,IAAI,CAACiB,SAAS,CAACH,WAAW,CAAC,CAAC;MACpCzB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEU,IAAI,CAACiB,SAAS,CAACH,WAAW,CAAC,CAAC;MACjD5C,UAAU,CAAC,EAAE,CAAC;IAClB,CAAC,MAAM;MACHmB,OAAO,CAACkB,KAAK,CAAC,wBAAwB,CAAC;IAC3C;EACJ,CAAC;EAED,IAAI,CAAChC,IAAI,EAAE;IACP,oBAAOf,OAAA,CAAAE,SAAA;MAAAwD,QAAA,eACH1D,OAAA,CAACZ,GAAG;QAACuE,EAAE,EAAE;UACLC,EAAE,EAAE,EAAE;UACNC,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBC,UAAU,EAAE;QAChB,CAAE;QAAAL,QAAA,eACE1D,OAAA,CAACN,UAAU;UAACsE,OAAO,EAAC,IAAI;UAAAN,QAAA,EAAC;QAAgD;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF;IAAC,gBACR,CAAC;EACP;EAEA,oBACIpE,OAAA,CAAAE,SAAA;IAAAwD,QAAA,eACI1D,OAAA,CAACX,SAAS;MAACsE,EAAE,EAAE;QAACU,CAAC,EAAE;MAAM,CAAE;MAAAX,QAAA,gBAEvB1D,OAAA,CAACV,WAAW;QAAA2E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACdpE,OAAA,CAACZ,GAAG;QAACkF,KAAK,EAAE;UAACC,SAAS,EAAE,GAAG;UAAEC,QAAQ,EAAE;QAAM,CAAE;QAAAd,QAAA,eAC3C1D,OAAA,CAACR,KAAK;UAACiF,OAAO,EAAE,CAAE;UAAAf,QAAA,EACbnD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEmE,GAAG,CAAC,CAAC9B,GAAG,EAAE+B,KAAK,kBACtB3E,OAAA,CAACL,WAAW;YAACiF,QAAQ,EAAEhC,GAAG,CAACS,QAAS;YAACwB,IAAI,EAAE5D,UAAU,CAAC2B,GAAG,CAACkC,UAAU,CAAE;YACzDrE,OAAO,EAAEmC,GAAG,CAACnC,OAAQ;YAACoC,UAAU,EAAED,GAAG,CAACC,UAAW;YAACvB,SAAS,EAAEjB;UAAG;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAClF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEFpE,OAAA,CAACT,IAAI;QAACoE,EAAE,EAAE;UAAEU,CAAC,EAAE;QAAO,CAAE;QAACU,SAAS;QAACN,OAAO,EAAE,CAAE;QAAAf,QAAA,gBAC1C1D,OAAA,CAACT,IAAI;UAAAmE,QAAA,eACD1D,OAAA,CAACP,SAAS;YACNuF,EAAE,EAAC,cAAc;YACjBC,WAAW,EAAC,eAAe;YAC3BC,SAAS;YACTC,SAAS;YACTC,KAAK,EAAE3E,OAAQ;YACf4E,QAAQ,EAAGC,CAAC,IAAK5E,UAAU,CAAC4E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC5CI,IAAI,EAAC,QAAQ;YACbC,MAAM,EAAC;UAAQ;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACPpE,OAAA,CAACT,IAAI;UAACmG,IAAI;UAACC,EAAE,EAAE,CAAE;UAAAjC,QAAA,eACb1D,OAAA,CAACJ,UAAU;YACX4F,IAAI,EAAC,OAAO;YAACI,KAAK,EAAC,SAAS;YAAC,cAAW,gBAAgB;YACxDC,OAAO,EAAE3C,WAAY;YAAAQ,QAAA,eAErB1D,OAAA,CAACH,eAAe;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACd,CAAC;AAEX,CAAC;AAAChE,EAAA,CArJID,eAAe;EAAA,QAMAL,WAAW;AAAA;AAAAgG,EAAA,GAN1B3F,eAAe;AAuJrB,eAAeA,eAAe;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}