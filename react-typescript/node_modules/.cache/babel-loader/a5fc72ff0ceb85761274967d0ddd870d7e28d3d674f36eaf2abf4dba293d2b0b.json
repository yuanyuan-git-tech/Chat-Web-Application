{"ast":null,"code":"var _jsxFileName = \"/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/pages/Register.tsx\",\n  _s = $RefreshSig$();\nimport { Avatar, Box, Button, Container, CssBaseline, Grid, TextField, Typography } from \"@mui/material\";\nimport { LockOutlined } from \"@mui/icons-material\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { register } from \"../services/auth\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n  const [userNameError, setUserNameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const handleRegister = async () => {\n    setUserNameError(\"\");\n    setPasswordError(\"\");\n    if (userName === \"\") {\n      setUserNameError(\"Please input username\");\n      return;\n    }\n    if (password === \"\" || confirmedPassword === \"\") {\n      setPasswordError(\"Please input password\");\n      return;\n    }\n    if (password !== confirmedPassword) {\n      setPasswordError(\"Password does not match\");\n      return;\n    }\n\n    // encode the password!!!\n    await register(userName, password).then(response => response.json()).then(data => {}).catch(error => {\n      setPasswordError(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 20,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: \"primary.light\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"userName\",\n                required: true,\n                fullWidth: true,\n                id: \"userName\",\n                label: \"UserName\",\n                autoFocus: true,\n                value: userName,\n                error: userNameError !== \"\",\n                onChange: e => setUserName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                value: password,\n                error: passwordError !== \"\",\n                helperText: passwordError,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"confirmedPassword\",\n                label: \"Confirm Password\",\n                type: \"password\",\n                id: \"confirmedPassword\",\n                value: confirmedPassword,\n                error: passwordError !== \"\",\n                helperText: passwordError,\n                onChange: e => setConfirmedPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            onClick: handleRegister,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/auth\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"AsAKS8W5ERfIgj0iQE55V0M8TeE=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Avatar","Box","Button","Container","CssBaseline","Grid","TextField","Typography","LockOutlined","useState","Link","register","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","userName","setUserName","password","setPassword","confirmedPassword","setConfirmedPassword","userNameError","setUserNameError","passwordError","setPasswordError","handleRegister","then","response","json","data","catch","error","children","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","display","flexDirection","alignItems","m","bgcolor","variant","container","spacing","item","xs","name","required","fullWidth","id","label","autoFocus","value","onChange","e","target","type","helperText","mb","onClick","justifyContent","to","_c","$RefreshReg$"],"sources":["/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/pages/Register.tsx"],"sourcesContent":["import {\n    Avatar,\n    Box,\n    Button,\n    Container,\n    CssBaseline,\n    Grid,\n    TextField,\n    Typography,\n} from \"@mui/material\";\nimport { LockOutlined } from \"@mui/icons-material\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {login, register} from \"../services/auth\";\n\nconst Register = () => {\n    const [userName, setUserName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n\n    const[userNameError, setUserNameError] = useState(\"\")\n    const[passwordError, setPasswordError]= useState(\"\")\n\n    const handleRegister = async () => {\n        setUserNameError(\"\")\n        setPasswordError(\"\")\n\n        if (userName === \"\") {\n            setUserNameError(\"Please input username\")\n            return\n        }\n        if (password === \"\" || confirmedPassword === \"\") {\n            setPasswordError(\"Please input password\")\n            return\n        }\n        if (password !== confirmedPassword) {\n            setPasswordError(\"Password does not match\")\n            return\n        }\n\n        // encode the password!!!\n        await register(userName, password)\n            .then((response) => response.json())\n            .then((data) => {\n\n            })\n            .catch(error => {\n                setPasswordError(error)\n            });\n    };\n\n    return (\n        <>\n            <Container maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        mt: 20,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: \"primary.light\" }}>\n                        <LockOutlined />\n                    </Avatar>\n                    <Typography variant=\"h5\">Register</Typography>\n                    <Box sx={{ mt: 3 }}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name=\"userName\"\n                                    required\n                                    fullWidth\n                                    id=\"userName\"\n                                    label=\"UserName\"\n                                    autoFocus\n                                    value={userName}\n                                    error={userNameError !== \"\"}\n                                    onChange={(e) => setUserName(e.target.value)}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    value={password}\n                                    error={passwordError !== \"\"}\n                                    helperText={passwordError}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"confirmedPassword\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"confirmedPassword\"\n                                    value={confirmedPassword}\n                                    error={passwordError !== \"\"}\n                                    helperText={passwordError}\n                                    onChange={(e) => setConfirmedPassword(e.target.value)}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            onClick={handleRegister}\n                        >\n                            Register\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Link to=\"/auth\">Login</Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Container>\n        </>\n    );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}