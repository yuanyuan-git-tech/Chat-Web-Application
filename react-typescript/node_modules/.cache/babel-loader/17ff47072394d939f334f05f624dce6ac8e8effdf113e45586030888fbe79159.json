{"ast":null,"code":"var _jsxFileName = \"/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/WebsocketClient.tsx\",\n  _s = $RefreshSig$();\n// src/components/WebsocketClient.tsx\nimport React, { useEffect, useState } from 'react';\nimport Cookies from \"universal-cookie\";\nimport { Box, Stack, TextField, Typography } from \"@mui/material\";\nimport MessageCard from \"./MessageCard\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendRoundedIcon from \"@mui/icons-material/SendRounded\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebsocketClient = () => {\n  _s();\n  const [ws, setWs] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [content, setContent] = useState('');\n  const cookies = new Cookies();\n  const accessToken = cookies.get('access-token');\n  const navigate = useNavigate();\n  const [auth, setAuth] = useState(false);\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/history', {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'Authorization': `Bearer ${accessToken}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch, status: \" + response.status);\n        }\n        const data = await response.json();\n        setMessages(data);\n        initializeWebSocket();\n      } catch (error) {\n        console.error(\"Failed to fetch historical messages:\", error);\n        setAuth(false);\n        setTimeout(() => navigate(\"/login\"), 4000);\n      }\n    };\n    fetchHistory();\n  }, [accessToken, navigate]);\n  const initializeWebSocket = () => {\n    const websocket = new WebSocket('ws://localhost:8000/message');\n    websocket.onopen = () => console.log('WebSocket Connected');\n    websocket.onmessage = event => {\n      const message = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, message]);\n    };\n    websocket.onclose = () => console.log('WebSocket Disconnected');\n    setWs(websocket);\n  };\n  const sendMessage = () => {\n    if (ws) {\n      ws.send(JSON.stringify({\n        username: cookies.get('user'),\n        content: content\n      }));\n      setContent('');\n    }\n  };\n  if (!auth) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 20,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"You have not login! Redirecting to login page...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      height: 1000,\n      width: 1000,\n      my: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 4,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageCard, {\n          userName: msg.username,\n          time: \"a\",\n          content: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"messageInput\",\n          placeholder: \"Write here...\",\n          multiline: true,\n          autoFocus: true,\n          value: content,\n          onChange: e => setContent(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"large\",\n          color: \"primary\",\n          \"aria-label\": \"send a messgae\",\n          onClick: sendMessage,\n          children: /*#__PURE__*/_jsxDEV(SendRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(WebsocketClient, \"5/mRPbjlunZgfyCAU9d8uIoGPA4=\", false, function () {\n  return [useNavigate];\n});\n_c = WebsocketClient;\nexport default WebsocketClient;\nvar _c;\n$RefreshReg$(_c, \"WebsocketClient\");","map":{"version":3,"names":["React","useEffect","useState","Cookies","Box","Stack","TextField","Typography","MessageCard","IconButton","SendRoundedIcon","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","WebsocketClient","_s","ws","setWs","messages","setMessages","content","setContent","cookies","accessToken","get","navigate","auth","setAuth","fetchHistory","response","fetch","method","headers","ok","Error","status","data","json","initializeWebSocket","error","console","setTimeout","websocket","WebSocket","onopen","log","onmessage","event","message","JSON","parse","prevMessages","onclose","sendMessage","send","stringify","username","children","sx","mt","display","flexDirection","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","height","width","my","gap","spacing","map","msg","index","userName","time","id","placeholder","multiline","autoFocus","value","onChange","e","target","fullWidth","size","color","onClick","_c","$RefreshReg$"],"sources":["/Users/yuanyuanzhao/InterviewProject/Nimble-FullStack/react-typescript/src/WebsocketClient.tsx"],"sourcesContent":["// src/components/WebsocketClient.tsx\nimport React, { useEffect, useState } from 'react';\nimport Cookies from \"universal-cookie\";\nimport {Box, Container, Stack, TextField, Typography} from \"@mui/material\";\nimport MessageCard from \"./MessageCard\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendRoundedIcon from \"@mui/icons-material/SendRounded\";\nimport {useNavigate} from \"react-router-dom\";\n\ninterface Message {\n    username: string;\n    content: string;\n}\n\nconst WebsocketClient: React.FC = () => {\n    const [ws, setWs] = useState<WebSocket | null>(null);\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [content, setContent] = useState('');\n    const cookies = new Cookies();\n    const accessToken = cookies.get('access-token');\n    const navigate = useNavigate();\n    const [auth, setAuth] = useState(false);\n\n    useEffect(() => {\n        const fetchHistory = async () => {\n            try {\n                const response = await fetch('http://localhost:8000/history', {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        'Authorization': `Bearer ${accessToken}`\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch, status: \" + response.status);\n                }\n\n                const data = await response.json();\n                setMessages(data);\n                initializeWebSocket();\n            } catch (error) {\n                console.error(\"Failed to fetch historical messages:\", error);\n                setAuth(false);\n                setTimeout(() => navigate(\"/login\"), 4000);\n            }\n        };\n        fetchHistory();\n    }, [accessToken, navigate]);\n\n    const initializeWebSocket = () => {\n        const websocket = new WebSocket('ws://localhost:8000/message');\n        websocket.onopen = () => console.log('WebSocket Connected');\n        websocket.onmessage = (event) => {\n            const message: Message = JSON.parse(event.data);\n            setMessages(prevMessages => [...prevMessages, message]);\n        };\n        websocket.onclose = () => console.log('WebSocket Disconnected');\n        setWs(websocket);\n    };\n\n    const sendMessage = () => {\n        if (ws) {\n            ws.send(JSON.stringify({ username: cookies.get('user'), content: content }));\n            setContent('');\n        }\n    };\n\n    if (!auth) {\n        return <>\n           <Box  sx={{\n               mt: 20,\n               display: \"flex\",\n               flexDirection: \"column\",\n               alignItems: \"center\",\n           }}>\n               <Typography variant=\"h5\">You have not login! Redirecting to login page...</Typography>\n           </Box>\n        </>\n    }\n\n    return (\n        <>\n            <Box height={1000}\n                 width={1000}\n                 my={4}\n                 display=\"flex\"\n                 alignItems=\"center\"\n                 gap={4}\n            >\n\n                <Stack spacing={2}>\n                    {messages.map((msg, index) => (\n                        <MessageCard userName={msg.username} time=\"a\" content={msg.content}/>\n                    ))}\n                    <TextField\n                        id=\"messageInput\"\n                        placeholder=\"Write here...\"\n                        multiline\n                        autoFocus\n                        value={content}\n                        onChange={(e) => setContent(e.target.value)}\n                        fullWidth\n                    />\n                    <IconButton\n                        size=\"large\" color=\"primary\" aria-label=\"send a messgae\"\n                        onClick={sendMessage}\n                    >\n                        <SendRoundedIcon />\n                    </IconButton>\n                </Stack>\n            </Box>\n\n        </>\n    )\n};\n\nexport default WebsocketClient;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAAQC,GAAG,EAAaC,KAAK,EAAEC,SAAS,EAAEC,UAAU,QAAO,eAAe;AAC1E,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAAQC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO7C,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGjB,QAAQ,CAAmB,IAAI,CAAC;EACpD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMsB,OAAO,GAAG,IAAIrB,OAAO,CAAC,CAAC;EAC7B,MAAMsB,WAAW,GAAGD,OAAO,CAACE,GAAG,CAAC,cAAc,CAAC;EAC/C,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACZ,MAAM6B,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UAC1DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUT,WAAW;UAC1C;QACJ,CAAC,CAAC;QAEF,IAAI,CAACM,QAAQ,CAACI,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGL,QAAQ,CAACM,MAAM,CAAC;QAClE;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClClB,WAAW,CAACiB,IAAI,CAAC;QACjBE,mBAAmB,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5DZ,OAAO,CAAC,KAAK,CAAC;QACdc,UAAU,CAAC,MAAMhB,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC;MAC9C;IACJ,CAAC;IACDG,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,WAAW,EAAEE,QAAQ,CAAC,CAAC;EAE3B,MAAMa,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,MAAMI,SAAS,GAAG,IAAIC,SAAS,CAAC,6BAA6B,CAAC;IAC9DD,SAAS,CAACE,MAAM,GAAG,MAAMJ,OAAO,CAACK,GAAG,CAAC,qBAAqB,CAAC;IAC3DH,SAAS,CAACI,SAAS,GAAIC,KAAK,IAAK;MAC7B,MAAMC,OAAgB,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACX,IAAI,CAAC;MAC/CjB,WAAW,CAACgC,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEH,OAAO,CAAC,CAAC;IAC3D,CAAC;IACDN,SAAS,CAACU,OAAO,GAAG,MAAMZ,OAAO,CAACK,GAAG,CAAC,wBAAwB,CAAC;IAC/D5B,KAAK,CAACyB,SAAS,CAAC;EACpB,CAAC;EAED,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIrC,EAAE,EAAE;MACJA,EAAE,CAACsC,IAAI,CAACL,IAAI,CAACM,SAAS,CAAC;QAAEC,QAAQ,EAAElC,OAAO,CAACE,GAAG,CAAC,MAAM,CAAC;QAAEJ,OAAO,EAAEA;MAAQ,CAAC,CAAC,CAAC;MAC5EC,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAED,IAAI,CAACK,IAAI,EAAE;IACP,oBAAOf,OAAA,CAAAE,SAAA;MAAA4C,QAAA,eACJ9C,OAAA,CAACT,GAAG;QAAEwD,EAAE,EAAE;UACNC,EAAE,EAAE,EAAE;UACNC,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBC,UAAU,EAAE;QAChB,CAAE;QAAAL,QAAA,eACE9C,OAAA,CAACN,UAAU;UAAC0D,OAAO,EAAC,IAAI;UAAAN,QAAA,EAAC;QAAgD;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF;IAAC,gBACP,CAAC;EACP;EAEA,oBACIxD,OAAA,CAAAE,SAAA;IAAA4C,QAAA,eACI9C,OAAA,CAACT,GAAG;MAACkE,MAAM,EAAE,IAAK;MACbC,KAAK,EAAE,IAAK;MACZC,EAAE,EAAE,CAAE;MACNV,OAAO,EAAC,MAAM;MACdE,UAAU,EAAC,QAAQ;MACnBS,GAAG,EAAE,CAAE;MAAAd,QAAA,eAGR9C,OAAA,CAACR,KAAK;QAACqE,OAAO,EAAE,CAAE;QAAAf,QAAA,GACbvC,QAAQ,CAACuD,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBhE,OAAA,CAACL,WAAW;UAACsE,QAAQ,EAAEF,GAAG,CAAClB,QAAS;UAACqB,IAAI,EAAC,GAAG;UAACzD,OAAO,EAAEsD,GAAG,CAACtD;QAAQ;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CACvE,CAAC,eACFxD,OAAA,CAACP,SAAS;UACN0E,EAAE,EAAC,cAAc;UACjBC,WAAW,EAAC,eAAe;UAC3BC,SAAS;UACTC,SAAS;UACTC,KAAK,EAAE9D,OAAQ;UACf+D,QAAQ,EAAGC,CAAC,IAAK/D,UAAU,CAAC+D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC5CI,SAAS;QAAA;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACFxD,OAAA,CAACJ,UAAU;UACPgF,IAAI,EAAC,OAAO;UAACC,KAAK,EAAC,SAAS;UAAC,cAAW,gBAAgB;UACxDC,OAAO,EAAEpC,WAAY;UAAAI,QAAA,eAErB9C,OAAA,CAACH,eAAe;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBAER,CAAC;AAEX,CAAC;AAACpD,EAAA,CArGID,eAAyB;EAAA,QAMVL,WAAW;AAAA;AAAAiF,EAAA,GAN1B5E,eAAyB;AAuG/B,eAAeA,eAAe;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}